import awt.Graphics;
import awt.event.KeyEvent;

class Sprite extends Animatible {
   
   public let x = 0f;
    public let y = 0f;
    public let dx = 0f;
    public let dy = 0f;
   
   public new(): this(0, 0) { 
   }
   
   public new(x, y) {
      this.x = x;
      this.y = y;
      dx = 0;
      dy = 0;
   }
   
   public draw(g, x, y) {
      g.drawImage(currentAnimation().getImage(), x, y, null);
   }
   
   public draw(g, x, y, offsetX, offsetY) {
      draw(g, x + offsetX, y + offsetY);
   }

    public getX() {
        return x;
    }
    
    public setX(x) {
       this.x = x;
    }
    
    public getY() {
        return y;
    }
    
    public setY(y) {
       this.y = y;
    }
    
    public getdX() {
       return dx;
    }
    
    public setdX(dx) {
       this.dx = dx;   
    }
    
    public setdY(dy) {
       this.dy = dy;
    }
    
    public getdY() {
       return dy;
    }
    
    public getHeight() {
       return currentAnimation().getHeight();
    }
    
    public getWidth() {
       return currentAnimation().getWidth();
    }
    
    public keyReleased(e) {}
    public keyPressed(e) {} 
    public keyTyped(e) {} 
    
   // Checks simple collision between sprites.
   // Checks if two Sprites collide with one another. Returns false if the two Sprites 
   // are the same. Returns false if one of the Sprites is a Creature that is not alive.
   public static isCollision(s1, s2) {
       // if the Sprites are the same, return false
       if (s1 == s2) {
           return false;
       }
   
       // get the pixel location of the Sprites
       let s1x = Math.round(s1.getX());
       let s1y = Math.round(s1.getY());
       let s2x = Math.round(s2.getX());
       let s2y = Math.round(s2.getY());
   
       // check if the two sprites' boundaries intersect
       return (s1x < s2x + s2.getWidth() && s2x < s1x + s1.getWidth() && 
             s1y < s2y + s2.getHeight() && s2y < s1y + s1.getHeight());
   }
}

