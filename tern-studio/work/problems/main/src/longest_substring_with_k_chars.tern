
assert longestSubstring("aabbcc", 2) == 4;
assert longestSubstring("aabbbcc", 2) == 5;
assert longestSubstring("aabbcc", 3) == 6;


func longestSubstring(str, k) {
   let remove = 0;
   let uniq = {};
   let max = -1;
   
   for(i in 0 to str.length -1) {
      let c = str.charAt(i);
      uniq.add(c);
      
      while(uniq.length > k){
         c = str.charAt(remove++);
         uniq.remove(c);
      }
      if(uniq.length == k) {
         let len = i - remove;
         max = Math.max(max, len);
         println(len + " (${str}, ${k}) -> ${max}");
      }
   }
   println();
   return max;
   
}


// func longestSubstring(str, k) {
//    let max = -1;
   
//    for(i in 0 to str.length - 1) {
//       let s = {};
//       let len = 0;
      
//       for(j in i to str.length - 1) {
//          let v = str.charAt(j);
//          s.add(v);
         
//          if(s.length > k) {
//             break;
//          }
//          len = (j-i) + 1;
//       }
//       max = Math.max(max, len);
//    }
//    println(max);
//    return max;
// }