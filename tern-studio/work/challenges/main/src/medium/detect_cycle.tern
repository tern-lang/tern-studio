



func circularArrayLoop(nums){
   const done = {};
   
   for(i in index to nums.length -1){
      let val = nums[index];
      
      if(positive && val >= 0) {
         if(!findLoop(nums, i, done, true)) {
            return false;
         }
      }
   }
   
}

func findLoop(nums, index, positive) {
   for(i in index to nums.length -1){
      let val = nums[index];
      
      if(positive && val >= 0) {
         if(!findLoop(nums, i, {}, true)) {
            return false;
         }
      }
   }
   return true;
}

func detectCycle(nums, index, positive, count) {
   if(done.add(index)) {
      for(i in index to nums.length -1){
         let val = nums[index];
         
         if(val < 0 && positive) {
            return false;
         }
         if(!detectCycle(nums, i, done, true)) {
            return false;
         }
      }
      return true;
   }
   return false;
}

func detectCycle(nums, index, done, positive, count) {
   if(done.add(index)) {
      for(i in index to nums.length -1){
         let val = nums[index];
         
         if(val < 0 && positive) {
            return false;
         }
         if(!detectCycle(nums, i, done, true)) {
            return false;
         }
      }
      return true;
   }
   return false;
}