

const matrix = [
   [0,0,1,1],
   [1,0,1,0],
   [1,1,0,0]
];

const result = matrixScore(matrix);

drawMatrix(matrix);
println(result);

func matrixScore(matrix) {
   let result = [];
   
   for(row in 0 to matrix.length - 1) { // first row should always be 1
      if(matrix[row][0] != 1) { 
         flipRow(matrix, row);
      }
   }
   for(column in 1 to matrix[0].length - 1) { // first row should always be 1
      let count = 0;
      
      for(row in 0 to matrix.length -1) {
         count += matrix[row][column] == 1 ? -1 : 1;
      }
      if(count > 0) {
         flipColumn(matrix, column);
      }
   }
   return scoreMatrix(matrix);
}

func drawMatrix(matrix) {
   for(row in 0 to matrix.length - 1) { // first row should always be 1
      println(matrix[row] + " " + scoreRow(matrix[row]));
   }
}

func flipColumn(matrix, column) {
   for(i in 0 to matrix.length -1){
      matrix[i][column] = matrix[i][column] == 0 ? 1 : 0;
   }
}

func flipRow(matrix, row) {
   for(i in 0 to matrix[row].length -1){
      matrix[row][i] = matrix[row][i] == 0 ? 1 : 0;
   }
}

func scoreMatrix(matrix) {
   let total = 0L;
   
   for(row in matrix) {
      total += scoreRow(row);
   }
   return total;
}

func scoreRow(row) {
   let value = 0L;
   
   for(bit in row) {
      value <<= 1;      
      value |= bit;
   }
   return value;
}