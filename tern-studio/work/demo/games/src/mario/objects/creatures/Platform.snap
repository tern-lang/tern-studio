import awt.image.BufferedImage;

import mario.core.animation.Animation;
import mario.core.tile.TileMap;
import mario.objects.base.Creature;
import mario.util.ImageManipulator;



class Platform extends Creature {
   
   public var move: Animation;
   public var turn: Integer;
   public var isVertical: Boolean = false;
   public var isHorizontal: Boolean = false;
   public var switchedVertical: Boolean = false;
   public var switchedHorizontal: Boolean = false;
   public var canJumpThrough: Boolean = false;
   public var oldX: Float = 0f;
   public var oldY: Float = 0f;
   public var oldDx: Float = 0f;
   public var oldDy: Float = 0f;
   
   public new(pixelX: Integer, pixelY: Integer): super(pixelX, pixelY) {
      setIsAlwaysRelevant(true);
      setIsPlatform(true);
      turn = 1;
      dx = 0;
      dy = 0;
      var red_platform: BufferedImage = ImageManipulator.loadImage("/mario/items/Red_Platform_2.png");
      move = new Animation(2000).addFrame(red_platform);
      setAnimation(move);
   }
   
   /**
    * @return the oldX
    */
   public getOldX(): Float {
      return oldX;
   }

   /**
    * @param oldX the oldX to set
    */
   public setOldX(oldX: Float) {
      this.oldX = oldX;
   }

   /**
    * @return the oldY
    */
   public getOldY(): Float {
      return oldY;
   }

   /**
    * @param oldY the oldY to set
    */
   public setOldY(oldY: Float) {
      this.oldY = oldY;
   }

   public canJumpThrough(): Boolean {
      return canJumpThrough;
   }
   public isHorizontal(): Boolean {
      return isHorizontal;
   }
   
   public isVertical(): Boolean {
      return isVertical;
   }
   
   public getLastdX(): Float {
      return oldDx;
   }
   
   public getLastdY(): Float {
      return oldDy;
   }
   
   public switchedVertical(): Boolean {
      return switchedVertical;
   }
   
   public switchedHorizontal(): Boolean {
      return switchedHorizontal;
   }
   
   public updateCreature(map: TileMap, time: Integer) {

      
      if(dx != 0) {
         isHorizontal = true;
      }
      if(dy != 0) {
         isVertical = true;
      }
      if(turn == 801) {
         turn = 1;
      }
      if(turn <= 400) {
         oldDx = dx;
         oldDy = dy;
         dx = 0.05f;
         dy = 0.025f;
      } else if(turn > 400) {
         oldDy = dy;
         oldDx = dx;
         dx = -0.05f;
         dy = -0.025f;
      } 
      turn = turn + 1;
      oldX = x;
      oldY = y;
      x = x + time*dx;
      y = y + time*dy;
      
      if((oldDx > 0 && dx < 0) || (oldDx < 0 && dx > 0)) {
         this.switchedHorizontal = true;
      } else {
         this.switchedHorizontal = false;
      }
      
      if((oldDy > 0 && dy < 0) || (oldDy < 0 && dy > 0)) {
         this.switchedVertical = true;
      } else {
         this.switchedVertical = false;
      }
      //dx = 0;
      //dy = 0;
      
   }

}

