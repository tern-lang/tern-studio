

class Vector2d {

	private var x: Float;
	private var y: Float;

	public new()
	{
		this.setX(0);
		this.setY(0);
	}

	public new(x: Float, y: Float)
	{
		this.setX(x);
		this.setY(y);
	}

	public setX(x: Float) {
		this.x = x;
	}

	public getX(): Float {
		return x;
	}

	public setY(y: Float) {
		this.y = y;
	}

	public getY(): Float {
		return y;
	}

	public set(x: Float, y: Float)
	{
		this.setX(x);
		this.setY(y);
	}


	public dot(v2: Vector2d): Float
	{
		let result = 0.0f;
		result = x * v2.x + y * v2.y;
		return result;
	}

	public getLength(): Float
	{
		return Math.sqrt(x*x + y*y);
	}

	public getDistance(v2: Vector2d): Float
	{
		return Math.sqrt((v2.x - x) * (v2.x - x) + (v2.y - y) * (v2.y - y));
	}


	public add(v2: Vector2d): Vector2d
	{
		var result: Vector2d = new Vector2d();
		result.setX(x + v2.x);
		result.setY(y + v2.y);
		return result;
	}

	public subtract(v2: Vector2d): Vector2d
	{
		var result: Vector2d = new Vector2d();
		result.setX(x - v2.x);
		result.setY(y - v2.y);
		return result;
	}

	public multiply(scaleFactor: Float): Vector2d
	{
		var result: Vector2d = new Vector2d();
		result.setX(x * scaleFactor);
		result.setY(y * scaleFactor);
		return result;
	}

	public normalize(): Vector2d
	{
		let len = getLength();
		if (len != 0.0f)
		{
			this.setX(x / len);
			this.setY(y / len);
		}
		else
		{
			this.setX(0.0f);
			this.setY(0.0f);
		}

		return this;
	}

	public  toString(): String
	{
		return "X: " + getX() + " Y: " + getY();
	}


}

