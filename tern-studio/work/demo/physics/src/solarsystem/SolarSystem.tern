/**
 * This program displays a simulated solar system in 2 dimensions. Buttons along
 * the top of the GUI allow the user to show or hide various physical properties
 * of the planets. These properties are the acceleration and velocity vectors,
 * the percent kinetic and potential energy, and the trajectory the planet has
 * taken. In addition, two buttons allow the user to zoom in or out for better
 * viewing. Finally, there is a sliding scale on the right of the GUI that
 * allows the user to alter the mass of the sun.
 * 
 * To run the program, you first must compile it (javac SolarSystem.java), then
 * you execute it using java SolarSystem <number of planets>.
 * 
 * @author Brett Kraabel
 * @author us.geocities.com/brettkraabel
 * @version 1.0
 */
import solarsystem.display.SkyFrame;

/** 
 * Main entry into program. Creates GUI and repaints it in infinite loop.
 */
module SolarSystem {
    /**
     * The time increment for numerical integration of differential equations
     * governing motion in the solar system.
     */
    const dt = 0.5d;
    //const dt = 0.05d;
    //const dt = 0.005d;
    
    /**
     * Main entry point into program. User may input number of planets on
     * command line.
     */
    start(arguments) {
        var skyFrame;
        var numOfPlanets = 8;

        if (arguments.size() == 0)
            skyFrame = new SkyFrame(numOfPlanets, dt);
        else {
            if (arguments[0].equals("h")) {
                usage();
                System.exit(1);
                skyFrame = new SkyFrame(0, 0);
           }
           try {
               numOfPlanets = Integer.parseInt(arguments[0]);
               numOfPlanets = Math.abs(numOfPlanets);
               skyFrame = new SkyFrame(numOfPlanets, 0);
           }
           catch(e) {
               System.err.println(e.toString());
               usage();
               System.exit(0);
               skyFrame = new SkyFrame(0, 0);
           }
        }
   
        loop {
            skyFrame.getPanel().repaint();
            Thread.sleep(5);
        }
    }

    /**
     * The method usage prints a message to the console instructing the use on
     * how to use the program.
     */
    usage() {
        const explaination =
        "This program displays a simulated solar system in 2 dimensions.\n"+
        "Buttons along the top of the GUI allow the user to show or hide\n" +
        "various physical properties of the planets. These properties are\n" +
        "the acceleration and velocity vectors, the percent kinetic and potential\n" +
        "energy, and the trajectory the planet has taken. In addition, two\n" +
        "buttons allow the user to zoom in or out for better viewing. Finally,\n" +
        "there is a sliding scale on the right of the GUI that allows the user\n" +
        "to alter the mass of the sun.";

        println("Usage :\n" +
            "java SolarSystem [options] <number of planets>\n" +
            "\n" +
            "options :\n" +
            "h\t\tprint this message\n\n" +
            explaination);
    }
}

SolarSystem.start([]);
