
let t = replaceText("let x = `hello world`;");

println(t);


func replaceText(text: String) {
   let index = 0;
   let findFirst = (text, start) -> {
      let min = -1;
      
      for(open in ["'", "`", "\""]) {
         let pos = text.indexOf(open, start);
         
         if(pos > 0 && text[pos-1] == '\\') {
            continue;
         }
         if(pos != -1) {
            if(min == -1) {
               min = pos;
            } else  if(pos < min) {
               min = pos;
            }
         }
      }
      return min;
   };
   
   while(index != -1) {
      index = findFirst(text, index);
      
      if(index == -1 || index >= text.length) {
         break;
      }
      const quote = text[index];
      const end = text.indexOf(quote, index + 1);
      
      if(end == -1) {
         break;
      }
      const prefix = text.substring(0, index);
      const suffix = text.substring(end + 1);
      const token = text.substring(index, end + 1);
      const encoded = encode(token);
      const replace = "<span style='color: #8959A8'>${encoded}</span>";
      
      text = "${prefix}${replace}${suffix}";
      index += replace.length;
   }
   return text;
}

func encode(text: String) {
   let builder = StringBuilder();
   
   for(i in 0 to text.length - 1){
      let ch = text[i];
      
      if(Character.isLetter(ch)) {
         let code = ch as Integer;
         builder.append("&#${code}");
      } else {
         builder.append(ch);
      }
   }
   return builder.toString();
}
