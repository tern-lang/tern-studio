import security.SecureRandom;

func select() {
   let response = URL("http://localhost:7833/v1/console")
      .header("Content-Type", "application/json")
      .post(`{
        "command": "select * from test",
        "session": "test",
        "execute": true
      }`);
      
   println(response.status);   
   println(response.response.reader.readText);
}

func selectWhere(clause) {
   let response = URL("http://localhost:7833/v1/console")
      .header("Content-Type", "application/json")
      .post(`{
        "command": "select * from memory where ${clause}",
        "session": "test",
        "execute": true
      }`);
      
   println(response.status);   
   println(response.response.reader.readText);
}
   
func insert() {
   let random = new SecureRandom();
   let current = 200;
   
   for(i in 0..20000) {
      let name = "name-${i}";
      let rand = random.nextInt(7);
      let factor = rand % 2 == 0 ? -1 : 1;
      
      current += factor * rand;
       
      let response = URL("http://localhost:7833/v1/console")
         .header("Content-Type", "application/json")
         .post(`{
           "command": "insert into memory (name, size) values ('${name}', ${current})",
           "session": "test",
           "execute": true
         }`);
         
      println(response.status + ": " + i);   
      //println(response.response.reader.readText);
   }
}  

func create() {
   let response = URL("http://localhost:7833/v1/console")
      .header("Content-Type", "application/json")
      .post(`{
        "command": "create table if not exists memory (id int default sequence, name text, size int, primary key(id))",
        "session": "test",
        "execute": true
      }`);
      
   println(response.status);   
   //println(response.response.reader.readText);
}  
//selectWhere("size > 200 and size < 5000");
create();
insert();
