enum Numbers {
   ONE(1),
   TWO(2),
   THREE(3);
   
   const val;
   new(val){
      this.val = val;
   }
   get() {
      return val;
   }
   
}

trait Foo {
   values();
   dump() {
      values().stream().forEach(x -> println(x));
   }
}

class Blah with Foo {
   const list;
   
   new(list){
      this.list = list;
   }
   
   override values(){
      return list;
   }
}

class Bar extends Blah with Runnable {

   new(list): super(list){
   }
   
   override run(){
      dump();
   }
   override toString(){
      return "Bar";
   }
}

var list = [1,2,3,4,5];
var bar = new Bar(list);
var thread = new Thread(bar); // proxy

thread.start();
thread.join();

println(Numbers.ONE.name);
println(Numbers.values);
println(Numbers.ONE.ordinal);
println(Numbers.ONE);
