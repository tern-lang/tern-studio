trait Transport {
   transport(destination);
}
class Vehicle with Transport{
   
   var wheels;
   
   new(wheels){
      System.err.println("Vehicle(${wheels})");
      this.wheels = wheels;
   }
   
   getWheels(){
      return wheels;
   } 
}

class Car extends Vehicle{
   
   var name;
   var doors;
   
   new(name) : this(name, 2){
      println("Car(${name})");
   }
   
   new(name, doors) : super(4) {
      println("Car(${name}, ${doors})");
      this.name = name;
      this.doors = doors;
   }
   override transport(destination){
      System.err.println("Car(name=${name} doors=${doors} wheels=${wheels} destination=${destination})");
   }
}

class Bus extends Vehicle{
   
   var capacity;
   var name;
   var doors;
   
   new(name, capacity) : this(name, capacity, 1){
      println("Bus(${name}, ${capacity})");
   }
   
   new(name, capacity, doors) : super(6) {
      System.err.println("Bus(${name}, ${capacity}, ${doors})");
      this.capacity = capacity;
      this.name = name;
      this.doors = doors;
   }
   
   override transport(destination){
      println("Bus(name=${name} doors=${doors} wheels=${wheels} capacity=${capacity} destination=${destination})");
   }
}
var c = new Car("ford");
c.transport("London");

var b = new Bus("school", 50);
b.transport("Dublin");
