

func main() {
   TunnelServer(9090, "www.bbc.co.uk", 80).execute();
}

main();


class TunnelServer {
   const localPort;
   const remoteHost;
   const remotePort;
   
   new(localPort, remoteHost, remotePort) {
      this.localPort = localPort;
      this.remoteHost = remoteHost;
      this.remotePort = remotePort;
   }
   
   public execute() {
      let thread = Thread(() -> {
         let listen = ServerSocket(localPort);
         
         while(true) {
            let socket = listen.accept();
            let connection = Socket(remoteHost, remotePort);
            
            Tunnel("localhost:${localPort} -> ${remoteHost}:${remotePort}", socket.inputStream, connection.outputStream).start();
            Tunnel("${remoteHost}:${remotePort} -> localhost:${localPort}", connection.inputStream, socket.outputStream).start();            
            
         }
      });
      thread.start();
      thread.join();
   }
}


class Tunnel {

   const name;
   const input;
   const output;

   new(name, input, output){
      this.name = name;
      this.input = input;
      this.output = output;
   }
   
   public start() {
      Thread(() -> {
         let array = new Byte[8192];
         let count = 0;
         
         try {
            while((count = input.read(array)) != -1) {
               output.write(array, 0, count);
               System.out.write(array, 0, count);
               System.out.flush();
            }
         } finally {
            sleep(100);
            output.close();
            input.close();
         }
      }, name).start();
      
   }
}
