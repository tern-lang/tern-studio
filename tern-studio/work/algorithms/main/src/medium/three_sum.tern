// https://leetcode.com/problems/3sum/

let result = threeSum([-1, 0, 1, 2, -1, -4]);

println(result);

// we need to bring the pointer closer to the missing value
// so if a + b 
//
// -2 + 3 = 1
func threeSum(nums) {
   let head = 0;
   let tail = nums.length -1;
   let sets = [];
   
   Collections.sort(nums);
   
   while(head < tail) {
      let a = nums[head];
      let b = nums[tail];
      
      if(a == b) {
         return sets;
      }
      let c = -1 * (a + b); // consider special cases a == a && b == b
      
      if(c != a && c != b) {
         let index = Collections.binarySearch(nums, c); // probably not needed
         
         if(index >= 0){
            sets.add([a, b, c]);
         }
      }
      while(head < tail && a == nums[head]) head++; 
      while(head < tail && b == nums[tail]) tail--; 
   }
   return sets;
}
