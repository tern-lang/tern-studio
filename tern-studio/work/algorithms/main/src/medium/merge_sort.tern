
/**
 * Mergesort is very like quicksort however there is no concept
 * of a pivot. Ths array is split in half and sorted by merging
 * the two halfs in to one another.
 */
 
let sorted = mergeSort([7, 2, 6, 9, 3, 5, 1, 8]);
println(sorted);
func mergeSort(vals){
   let list = ArrayList(vals);
   mergeSort(vals, 0, vals.length -1);
   return list;
}

func mergeSort(vals, start, finish){
   if(finish - start == 1) {
      if(vals[start] > vals[finish]) {
         (vals[start], vals[finish]) = (vals[finish], vals[start]);
      }
   } else {
      let mid = start + ((finish - start) / 2);
      let left = start;
      let right = mid;
      
      mergeSort(vals, start, mid);
      mergeSort(vals, mid +1, finish);
      
      while(left < mid && right < finish){
         if(vals[left] > vals[right]) {  
            (vals[left], vals[right]) = (vals[right], vals[left]);
         }
         right++;
         left++;
      }
      while(right+1 < finish) {
         if(vals[right] > vals[right+1]) {
            (vals[right], vals[right+1]) = (vals[right+1], vals[right]);
         }
      }
   }
}
