
let list1: ListNode = createList(1,3,5,6,7,88,990);
let list2: ListNode = createList(3,4,6,8,9,10,11,22,334);
let list3: ListNode = createList(0,1,2,3,4,5,6,7);

printList(list1);
printList(list2);
printList(list3);

let list4 = mergeLists(list1, list2, list3);

printList(list4);

class ListNode {
   let val;
   let next;
   
   new(val) {
      this.val = val;
   }
   
   add(a: ListNode) {
      let curr = next;
      next = a;
      a.next = curr;
   }
}

func printList(list: ListNode) {
   while(list) {
      print(list.val);
      list = list.next;
      
      if(list) {
         print(",");
      }
   }
   println();
}

func createList(list...: Number) {
   let result = list.stream().map(ListNode::new).iterator().gather();

   for(i in 0 to result.length -2) {
     result[i].next = result[i+1];
   }
   return result[0];
}

func mergeLists(lists...: ListNode){
   for(n in 1 to lists.length-1) {
      let left = lists[n -1];
      let right = lists[n];
      let prev = null;
      
      while(left && right) {
         if(left.val < right.val){
            if(prev == null) { //  left comes before right
               lists[n] = left;
               left = left.next;
               lists[n].next = right;
            } else {
               prev.next = left;
               left = left.next;
            }
         } else {
            // we are missing something here
            prev = right;
            right = right.next;
         }
      }
      if(left) {
         prev.next = left;
      }
   }
   return lists[lists.length-1];
}