// hard google interview

assert flowersInBloom([1,3,2], 1) == 2;
assert flowersInBloom([1,2,3], 1) == -1;

func flowersInBloom(flowers, k) {
   let list = [];
   let distance = k+1;

   for(let i = 0; i < flowers.length; i++) {
      let bloom = Bloom(i, flowers[i]) ;
      list.add(bloom);
   }
   Collections.sort(list, (a, b) -> Integer.compare(a.position, b.position));

   for(let i = 0; i < flowers.length; i++) {
      let bloom = list[i];
      
      if(i - distance >=0) {
         let other = list[i-distance];
         let start = bloom.day;
         let finish = other.day;
         
         if(start > finish) {
            (start, finish) = (finish, start);
         }
         for(let j = i -k; j < i; j++) {
            let day = list[j].day;
            
            if(day >= start && day <= finish) {
               return -1;
            }
         }
         return Math.max(start, finish)+ 1; // not zero ordered
      }
   }
   return -1;
}

class Bloom {
   let day;
   let position;
   
   new(day, position) {
      this.day = day;
      this.position = position;
   }
}
