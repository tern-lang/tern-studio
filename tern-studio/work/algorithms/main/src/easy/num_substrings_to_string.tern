/*
Create String A out of substrings of String B. Return the minimum number of copies that you need to do this.

Example:

A="zaza", B="baz"

copy1="z"
copy2="az"
copy3="a
A=copy1+copy2+copy3

Returns 3

Not sure what the most efficient way is in python, but would appreciate a solution.
*/

assert numCopies("baz", "zaza") == 3;

func numCopies(a, b) {
   for(i in 1 to b.length) {
      let sub = b.substring(i);
      
      if(a.contains(sub)) {
         let rem = b.substring(0, i);
         
         if(rem == b) {
            return 1;
         }
         let other = numCopies(a, rem);
         
         if(other != -1) {
            return other + 1;
         }
      }
   }
   return -1;
}