
assert nextClosestTime("23:59") == "22:22";
assert nextClosestTime("19:34") == "19:39";

func nextClosestTime(hhmm) {
   let digits = TreeSet();
   
   for(i in 0 to hhmm.length -1){
      let digit = hhmm[i];
      
      if(digit != ':') {
         digits.add(digit);
      }
   }
   let possibleDigits = ArrayList(digits);
   let possibleTimes = generateTimes(possibleDigits, "", {});
   let times = ArrayList(possibleTimes);
   
   Collections.sort(times);

   let index = Collections.binarySearch(times, hhmm);
   
   if(index +1 < times.length) {
      return times[index+1];
   }
   return times[0];
}

func generateTimes(digits, prefix, done) {
   if(prefix.length == 5) {
      return [prefix];
   }
   let list = {};
   
   for(i in 0 to digits.length -1) {
      let digit = digits[i];
      let newPrefix = prefix;
      
      if(newPrefix.length == 2){
         newPrefix += ':' + digit;
      } else {
         newPrefix += digit;
      }
      if(done.add(newPrefix) && acceptTime(newPrefix)) {
         let times = generateTimes(digits, newPrefix, done);
         list.addAll(times);
      }
   }
   return list;
}

func acceptTime(time) {
   if(time.length >= 1) {
      if(time[0] > '2') {
         return false;
      }
   }
   if(time.length >= 2) {
      if(time[0] == '2' && time[1] > '3') {
         return false;
      }
   }
   if(time.length >= 4) {
      if(time[3] > '5') {
         return false;
      }
   }
   return true;
}