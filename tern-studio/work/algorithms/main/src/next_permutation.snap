//https://leetcode.com/problems/next-permutation/
//https://www.nayuki.io/page/next-lexicographical-permutation-algorithm

assert nextPermutation([0,1,2,5,3,3,0]) == [0,1,3,0,2,3,5];
assert nextPermutation([1,2,3]) == [1,3,2];
//assert nextPermutation([3,2,1]) == [1,2,3];
assert nextPermutation([1,1,5]) == [1,5,1];

func nextPermutation(s) {
   let pivot = 0;
   
   for(i in 1 from s.length -1) {
      if(s[i - 1] < s[i]) {
         pivot = i - 1;
         break;
      }
   }
   let value = 0;
   
   for(i in pivot from s.length -1) {
      if(s[i] > s[pivot]) {
         value = i;
         break;
      }
   }
   swap(s, pivot, value);
   reverse(s, pivot + 1);
   
   return s;
}

func reverse(s, index) {
   let count = (s.length - index) / 2;
   let last = s.length -1;
   
   for(i in 0 to count - 1) {
      swap(s, index + i, last - i); 
   }
}

func swap(s, i, j) {
   let a = s[i];
   
   s[i] = s[j];
   s[j] = a;
}