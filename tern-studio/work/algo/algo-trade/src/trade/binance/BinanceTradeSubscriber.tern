
import org.java_websocket.handshake.ServerHandshake;
import org.java_websocket.client.WebSocketClient;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.PrettyPrinter;
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import trade.websocket.WebSocketSubscriber;
import util.stream.Collectors;
import trade.TradeListener;
import trade.Trade;

class BinanceTradeSubscriber extends WebSocketSubscriber {

   const printer: PrettyPrinter;
   const mapper: ObjectMapper;
   const listener: DepthListener;

   new(listener: DepthListener, u: URI): super(u){
      this.printer = new DefaultPrettyPrinter();
      this.mapper = new ObjectMapper();
      this.listener = listener;
   }

	override onMessage(msg: String) {
	   try {
   	   const data = mapper.readValue(msg, Object.class.type);
   	   const writer = mapper.writer(printer);
   	   const text = writer.writeValueAsString(data);
   	   const trade = new Trade(text);
   	   
   	   listener.onTrade(trade);
         //println(text);
      }catch(e:Exception){
         e.printStackTrace();
      }
	}
}
