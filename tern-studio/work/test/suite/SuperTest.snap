import test.TestCase;

class A {
   var a;
   new(a){
      this.a=a;
   }
   blah(){
      return "A.blah(): a=${a}";
   }
   fun1(){
      println("A.fun1(): a="+a);
   }
   test(){
      println("A.test()");
      fun1();
   }
}

class B extends A {
   var b;
   new(a,b):super(a){
      this.b=b;
   }
   fun1(){
      println("B.fun1()");
      println("B.fun1(): b="+b);
   }
   test(){
      super.test();
   }
}
class C extends B{
   new():super(1,2){}
   func(){
      return super.blah();
   }
}

class SuperTest with TestCase {

   testSuperScope(){ 
      var b = new B(1,2);
      var c = new C();
      b.test();
      
      assert c.func() == "A.blah(): a=1";
   }
}
