import util.concurrent.ScheduledThreadPoolExecutor;
import util.concurrent.CopyOnWriteArraySet;
import test.TestCase;

class CallableTest with TestCase {

   testCallable() {
      const executor = new ScheduledThreadPoolExecutor(10);
      const list = [];
      const set = new CopyOnWriteArraySet();
      for(var i in 0..99){
         list[i] = executor.submit(-> {
            println(i);
            set.add(i);
         });
      }
      println(list.size());
      assert list.size() == 100;
      for(var entry in list){
         entry.get();
      }
      println(set);
      for(var i in 0..99){
         // println(i + "=" +set.contains(i));
         // if(!set.contains(i)){
         //    println("error "+i+": "+set);
         //    for(var x in set){
         //       println("x=${x}=${x.class} i=${i}=${i.class} ==${x == i} eq=${x.equals(i)} contains=${set.contains(i)} x.hashCode=${x.hashCode()} i.hashCode=${i.hashCode()} x.id=${System.identityHashCode(x)} i.id=${System.identityHashCode(i)}");
         //    }
         // }
         assert set.contains(i);
      }
   }
}