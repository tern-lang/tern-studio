import test.TestCase;

class JsonParseTest with TestCase {

   testParseJson(){
      const json = "{\n"+
      "   \"glossary\": {\n"+
      "      \"title\": \"example glossary\",\n"+
      "      \"GlossDiv\": {\n"+
      "         \"title\": \"S\",\n"+
      "         \"GlossList\": {\n"+
      "            \"GlossEntry\": {\n"+
      "               \"ID\": \"SGML\",\n"+
      "               \"SortAs\": \"SGML\",\n"+
      "               \"GlossTerm\": \"Standard Generalized Markup Language\",\n"+
      "               \"Acronym\": \"SGML\",\n"+
      "               \"Abbrev\": \"ISO 8879:1986\",\n"+
      "               \"GlossDef\": {\n"+
      "                  \"para\": \"A meta-markup language, used to create markup languages such as DocBook.\",\n"+
      "                  \"GlossSeeAlso\": [\n"+
      "                     \"GML\",\n"+
      "                     \"XML\"\n"+
      "                  ]\n"+
      "               },\n"+
      "               \"GlossSee\": \"markup\"\n"+
      "            }\n"+
      "         }\n"+
      "      }\n"+
      "   }\n"+
      "}\n";
      
      const object =eval(json); // nested eval causes problems
      
      assert object.glossary.title == "example glossary";
      assert object.glossary.GlossDiv.title == "S";
      assert object.glossary.GlossDiv.GlossList.GlossEntry.ID == "SGML";
      
      println(object.glossary.GlossDiv.GlossList.GlossEntry.ID);
   }
}