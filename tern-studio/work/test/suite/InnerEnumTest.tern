import test.TestCase;

class Palatte {

   enum Color {
      RED,
      GREEN,
      BLUE,
      YELLOW,
      PURPLE
   }
   
   class Dot {
      var x;
      var y;
      var radius;
      var color:Color;
      
      new(x,y,radius,color: Color){
         this.x=x;
         this.y=y;
         this.radius = radius;
         this.color = color;
      }
      
      draw(){
         println("x=${x} y=${y} radius=${radius} color=${color}");
      }
   }
   
   createDot(x,y,color){
      var value = null;
      match(color){
      case 'red': value=Color.RED;
      case 'blue': value=Color.BLUE;
      case 'green': value=Color.GREEN;
      default: value=Color.YELLOW;
      }
      return new Dot(x,y,10,value);
   }
}

class InnerEnumTest with TestCase {

   testInnerEnum(){
      var palatte = new Palatte();
      var dot1 = palatte.createDot(1,2,'red');
      var dot2 = palatte.createDot(3,4,'green');
      
      dot1.draw();
      dot2.draw();
      
      assert dot1.x == 1;
      assert dot1.y == 2;
      assert dot1.color == Palatte.Color.RED;
      
      assert dot2.x == 3;
      assert dot2.y == 4;
      assert dot2.color == Palatte.Color.GREEN;
   }
}
