import test.TestCase;

class VariableCoercionTest with TestCase {

   @Test
   coercionTest(){
      var x = [123,4,55,"44", new Integer(3)];
      
      assert x[0] == 123;
      assert x[0].class == Integer.class;   
      assert x[1] == 4;
      assert x[1].class == Integer.class;   
      assert x[2] == 55;
      assert x[2].class == Integer.class;   
      assert x[3] == "44";
      assert x[3].class == String.class; 
      
      var y: Integer[] = x;
      
      assert y[0] == 123;
      assert y[0].class == Integer.class;   
      assert y[1] == 4;
      assert y[1].class == Integer.class;   
      assert y[2] == 55;
      assert y[2].class == Integer.class;   
      assert y[3] == 44;
      assert y[3].class == Integer.class; 
      
      var z: Double[] = y;
      
      assert z[0] == 123.0d;
      assert z[0].class == Double.class;   
      assert z[1] == 4.0d;
      assert z[1].class == Double.class;   
      assert z[2] == 55.0d;
      assert z[2].class == Double.class;   
      assert z[3] == 44.0d;
      assert z[3].class == Double.class;  
      
      // re-check y
      assert y[0] == 123;
      assert y[0].class == Integer.class;   
      assert y[1] == 4;
      assert y[1].class == Integer.class;   
      assert y[2] == 55;
      assert y[2].class == Integer.class;   
      assert y[3] == 44;
      assert y[3].class == Integer.class; 
      
      var s: String[] = y as String[];
      
      assert s[0] == "123";
      assert s[0].class == String.class;   
      assert s[1] == "4";
      assert s[1].class == String.class;   
      assert s[2] == "55";
      assert s[2].class == String.class;   
      assert s[3] == "44";
      assert s[3].class == String.class;  
      
      var t: String[] = x as String[];
      
      assert t[0] == "123";
      assert t[0].class == String.class;   
      assert t[1] == "4";
      assert t[1].class == String.class;   
      assert t[2] == "55";
      assert t[2].class == String.class;   
      assert t[3] == "44";
      assert t[3].class == String.class;     
   }
}