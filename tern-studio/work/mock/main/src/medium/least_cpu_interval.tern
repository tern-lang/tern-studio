

assert leastInterval(["A","A","A","B","B","B"], 50) == 104;
assert leastInterval(["A","A","A","B","B","B"], 2) == 8;

func leastInterval(tasks, n) {
   let base = "A".charAt(0) as Integer;
   let index = [];
   let total = 0;
   
   for(i in 0 to 25){
      index.add(0);
   }
   for(task in tasks) {
      let value = task.charAt(0) - base;
      
      index[value]++;
      total++;
   }
   let intervals = 0;
   
   while(total > 0) {
      let count = 0;
      
      for(i in 0 to 25) {
         if(index[i] > 0) {
            index[i]--;
            total--;
            
            if(++count >= n){
               break;
            }
         }
      }
      if(count > 0){
         intervals += count + n;
      }
   }
   return intervals - n;
}