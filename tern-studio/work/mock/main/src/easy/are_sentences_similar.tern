

assert areSentencesSimilar(
   ["an","extraordinary","meal"],
   ["one","good","dinner"],
   [["great","good"],["extraordinary","good"],["well","good"],["wonderful","good"],["excellent","good"],["fine","good"],["nice","good"],["any","one"],["some","one"],["unique","one"],["the","one"],["an","one"],["single","one"],["a","one"],["truck","car"],["wagon","car"],["automobile","car"],["auto","car"],["vehicle","car"],["entertain","have"],["drink","have"],["eat","have"],["take","have"],["fruits","meal"],["brunch","meal"],["breakfast","meal"],["food","meal"],["dinner","meal"],["super","meal"],["lunch","meal"],["possess","own"],["keep","own"],["have","own"],["extremely","very"],["actually","very"],["really","very"],["super","very"]]);

assert areSentencesSimilar(
   ["great", "acting", "skills"], 
   ["fine", "drama", "talent"],
   [["great", "fine"], ["acting","drama"], ["skills","talent"]]);

func areSentencesSimilar(words1, words2, pairs) {
   if(words1.length == words2.length) {
      let table = {:};
      
      for(pair in pairs) {
         let bucket1 = table.computeIfAbsent(pair[0], (_) -> HashSet());
         let bucket2 = table.computeIfAbsent(pair[1], (_) -> HashSet());
         
         bucket1.add(pair[1]);
         bucket2.add(pair[0]);
      }
      for(i in 0 to words1.length -1) {
         let word1 = words1[i];
         let word2 = words2[i];
         
         if(word1 != word2) {
            let bucket = table[word2];
            
            if(!bucket) {
               return false;
            }
            if(!bucket.contains(word1)) {
               return false;
            }
         }
      }
      return true;
   }
   return false;
} 

func findBucket(table, word) {
   
}