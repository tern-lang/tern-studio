import java.util.Random;

import mario.core.MarioResourceManager;
import mario.core.MarioSoundManager;
import mario.core.animation.Animation;
import mario.objects.base.Creature;
import android.graphics.Bitmap;
import android.graphics.Point;





class Thorny extends Creature {
   
   private var left: Animation;
   private var right: Animation;
   private var flip: Animation;
   private var r: Random;
   
   private static var left_1: Bitmap;
   private static var left_2: Bitmap;
   private static var right_1: Bitmap;
   private static var right_2: Bitmap;
   private static var flipped: Bitmap;
   private static var initialized: Boolean=false;
   public new(x: Integer, y: Integer, soundManager: MarioSoundManager): super(x, y, soundManager) {
      r = new Random();
      if (!initialized){
          left_1 = MarioResourceManager.Thorny[0];
          left_2 = MarioResourceManager.Thorny[1];
          right_1 = MarioResourceManager.Thorny[2];
          right_2 = MarioResourceManager.Thorny[3];
          flipped = MarioResourceManager.Thorny[4];
          initialized=true;
      }
      left = new Animation(150).addFrame(left_1).addFrame(left_2);
      right = new Animation(150).addFrame(right_1).addFrame(right_2);

      //dead = new DeadAfterAnimation();
      flip = new Animation(-> kill());
      //dead.addFrame(shell, 10);
      //dead.addFrame(shell, 10);
      flip.addFrame(flipped, 1200);
      flip.addFrame(flipped, 1200);
      setAnimation(left);
   }
   
   public xCollide(p: Point) {
      super.xCollide(p);
      if(currentAnimation() == left) {
         setAnimation(right);
      } else {
         setAnimation(left);
      }
   }
   
   public creatureXCollide() {
      if(dx > 0) {
         x = x - 2;
         setAnimation(left);
      } else {
         setAnimation(right);
         x = x + 2;
      }
      dx = -dx;
   }
   
   public flip() {
      setAnimation(flip);
      setIsFlipped(true);
      setIsCollidable(false);
      dy = -0.2f;
      dx = 0;
   }
   
   public wakeUp() {
      super.wakeUp();
      var rNum: Integer = r.nextInt(3);
         if(rNum == 0 || rNum == 1) {
            dx = -0.03f;
            setAnimation(left);
         } else {
            dx = 0.03f;
            setAnimation(right);
         }
   }
   
   public jumpedOn() {
      //setAnimation(dead);
      //setIsCollidable(false);
      //dx = 0;
   }
}

