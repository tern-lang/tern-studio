import mario.core.MarioSoundManager;
import mario.core.tile.GameTile;
import mario.core.tile.TileMap;
import mario.objects.creatures.Coin;
import mario.objects.creatures.Mushroom;
import mario.objects.creatures.Score;
import mario.particles.ParticleSystem;
import android.graphics.Bitmap;



class Brick extends GameTile {

   private var soundManager: MarioSoundManager;
   private var map: TileMap;
   
   private var numCoins: Integer = 0;
   private var hasMushroom: Boolean = false;
   
   public new(pixelX: Integer, pixelY: Integer, map: TileMap, img: Bitmap, soundManager: MarioSoundManager, numCoins: Integer,
          hasMushroom: Boolean): super(pixelX, pixelY, null,img) {
      // Integer pixelX, pixelY: Integer, anim: Animation, Image img
   
      setIsSloped(false);
      this.numCoins = numCoins;
      this.hasMushroom = hasMushroom;
      this.soundManager = soundManager;
      this.map = map;
   }
   
   public override update(time: Integer) {
      //super.update(time);
      if(getOffsetY() != 0) { setOffsetY(getOffsetY() + 2); }
   }
   
   public override doAction() {

      if (numCoins > 0) {
         numCoins--;
         setOffsetY(-10);
         soundManager.playCoin();
         var newCoin: Coin = new Coin(getPixelX(), getPixelY());
         var score: Score = new Score(getPixelX(), getPixelY());
         map.creaturesToAdd().add(newCoin);
         map.creaturesToAdd().add(score);
         newCoin.shoot();
      } else if (hasMushroom) {
         setOffsetY(-10);
         soundManager.playItemSprout();
         var shroom: Mushroom = new Mushroom(getPixelX(), getPixelY() - 26);
         map.creaturesToAdd().add(shroom);
      } else {// (((Mario)map.getPlayer()).){
         soundManager.playBrickShatter();
         map.particleSystem = new ParticleSystem(getPixelX(), getPixelY(), 8);
         map.getTiles()[getPixelX() >> 4][getPixelY() >> 4] = null;
      }

   }
}

