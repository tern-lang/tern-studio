import mario.core.MarioResourceManager;
import mario.core.MarioSoundManager;
import mario.core.animation.Animation;
import mario.core.tile.GameTile;
import mario.core.tile.TileMap;
import mario.objects.base.Creature;
import android.graphics.Bitmap;
import android.graphics.Point;


class RedShell extends Creature {
   
   private var still;
   private var rotate;
   private var flip;
   
   private var map;
   private var isMoving;
   
   private static var stay,rotate_1,rotate_2,rotate_3, flipped;
   private static var initialized=false;
   public new(x, y, map, soundManager, isStill): super(x, y, soundManager) {
      this.map = map;
      setIsAlwaysRelevant(true);
       
      if (!initialized){
          stay = MarioResourceManager.Red_Shell_1;
          rotate_1 = MarioResourceManager.Red_Shell_2;
          rotate_2 = MarioResourceManager.Red_Shell_3;
          rotate_3 = MarioResourceManager.Red_Shell_4;
          flipped = MarioResourceManager.Red_Shell_Flip;
          initialized=true;
      }

      still = new Animation();
      rotate = new Animation();
      flip = new Animation(-> kill());
      
      still.addFrame(stay, 150);
      rotate.addFrame(rotate_1, 30);
      rotate.addFrame(stay, 30);
      rotate.addFrame(rotate_2, 30);
      rotate.addFrame(rotate_3, 30);
      rotate.addFrame(rotate_1, 30);
      flip.addFrame(flipped, 1200);
      flip.addFrame(flipped, 1200);
      
      wakeUp();
      isMoving = false;
      setAnimation(still);
      dx = 0;
   }
   
   public isMoving() {
      return isMoving;
   }
   
   public xCollide(p) {
      super.xCollide(p);
      var tile = map.getTile(p.x, p.y);
      if(this.isOnScreen()) {
         soundManager.playBump();
         if(tile != null) {
            tile.doAction();
         }
      }
   }
   
   public flip() {
      setAnimation(flip);
      setIsFlipped(true);
      setIsCollidable(false);
      dy = -0.2f;
      dx = 0;
   }
   
   // if you run or jump on the shell faster, the shell moves faster.
   public jumpedOn(fromRight, attackerSpeed) {
      if(isMoving) {
         isMoving = false;
         setAnimation(still);
         dx = 0;
      } else {
         isMoving = true;
         setAnimation(rotate);
         if(fromRight) {
            if(attackerSpeed > 0.2f) {
               dx = 0.24f;
            } else if(attackerSpeed > 0.16) { 
               dx = 0.23f;
            } else {
               dx = 0.16f;
            }
         } else {
            if(attackerSpeed < -0.2f) {
               dx = -0.24f;
            } else if(attackerSpeed < -0.16) {
               dx = -0.23f;
            } else {
               dx = -0.16f;
            }
         }
      }
   }
}

